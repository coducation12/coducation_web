// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview An AI agent that suggests typing exercises based on the
 * student's past performance and current curriculum.
 *
 * - suggestTypingExercise - A function that handles the suggestion of typing
 *   exercises.
 * - SuggestTypingExerciseInput - The input type for the
 *   suggestTypingExercise function.
 * - SuggestTypingExerciseOutput - The return type for the
 *   suggestTypingExercise function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestTypingExerciseInputSchema = z.object({
  studentId: z.string().describe('The ID of the student.'),
  pastPerformance: z
    .string()
    .describe(
      'A summary of the students past typing performance, including accuracy, speed, and common mistakes.'
    ),
  currentCurriculum: z
    .string()
    .describe('The title and description of the students current curriculum.'),
});
export type SuggestTypingExerciseInput = z.infer<
  typeof SuggestTypingExerciseInputSchema
>;

const SuggestTypingExerciseOutputSchema = z.object({
  exerciseLanguage: z
    .string()
    .describe(
      'The language of the typing exercise (e.g., Korean, English, Code).'
    ),
  exerciseLevel: z
    .string()
    .describe('The difficulty level of the typing exercise (e.g., 기초, 중급, 수련).'),
  exerciseContent: z
    .string()
    .describe('The text content of the typing exercise.'),
  reasoning: z
    .string()
    .describe(
      'Explanation of why this exercise was selected based on student data.'
    ),
});
export type SuggestTypingExerciseOutput = z.infer<
  typeof SuggestTypingExerciseOutputSchema
>;

export async function suggestTypingExercise(
  input: SuggestTypingExerciseInput
): Promise<SuggestTypingExerciseOutput> {
  return suggestTypingExerciseFlow(input);
}

const suggestTypingExercisePrompt = ai.definePrompt({
  name: 'suggestTypingExercisePrompt',
  input: {schema: SuggestTypingExerciseInputSchema},
  output: {schema: SuggestTypingExerciseOutputSchema},
  prompt: `You are an AI typing exercise generator, designed to provide students with appropriate typing exercises.  Take into account the student's past performance and current curriculum to tailor the exercise to their needs. Explain your reasoning for the exercise you picked in the reasoning field.

Student ID: {{{studentId}}}
Past Performance: {{{pastPerformance}}}
Current Curriculum: {{{currentCurriculum}}}`,
});

const suggestTypingExerciseFlow = ai.defineFlow(
  {
    name: 'suggestTypingExerciseFlow',
    inputSchema: SuggestTypingExerciseInputSchema,
    outputSchema: SuggestTypingExerciseOutputSchema,
  },
  async input => {
    const {output} = await suggestTypingExercisePrompt(input);
    return output!;
  }
);
